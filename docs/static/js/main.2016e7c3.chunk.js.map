{"version":3,"sources":["components/Phrase.js","App.js","reportWebVitals.js","index.js"],"names":["WrapperPhrase","styled","div","Phrase","phrase","quote","author","Wrapper","Button","button","App","useState","setPhrase","fetchAPI","a","fetch","api","json","useEffect","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w6BAGA,IAAMA,EAAgBC,IAAOC,IAAV,KAiDJC,EAdA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACE,mCACGA,EAAOC,MACN,eAACL,EAAD,WACE,mCAAMI,EAAOC,SACb,oCAAOD,EAAOE,aAEd,Q,6nBC1CV,IAAMC,EAAUN,IAAOC,IAAV,KAOPM,EAASP,IAAOQ,OAAV,KA2CGC,MAzBf,WAAiB,IAAD,EACcC,mBAAS,IADvB,mBACPP,EADO,KACCQ,EADD,KAGRC,EAAQ,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,uDADT,cACTC,EADS,gBAEKA,EAAIC,OAFT,OAETZ,EAFS,OAGfO,EAAUP,EAAM,IAHD,2CAAH,qDAUd,OAJAa,qBAAU,WACRL,MACC,IAGD,eAACN,EAAD,WACE,cAAC,EAAD,CACEH,OAAQA,IAEV,cAACI,EAAD,CACEW,QAASN,EADX,8BCnCSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2016e7c3.chunk.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\n\nconst WrapperPhrase = styled.div`\n  padding: 3rem;\n  border-radius: 0.3rem;\n  background-color: #fff;\n  max-width: 800px;\n  @media (min-width: 992px) {\n    margin-top: 13rem;\n  }\n\n  h1 {\n    font-family: Arial, Helvetica, sans-serif;\n    text-align: center;\n    position: relative;\n    padding-left: 4rem;\n\n    &::before {\n      content: open-quote;\n      position: absolute;\n      font-size: 10rem;\n      color: black;\n      left: -1rem;\n      top: -2rem;\n    }\n  }\n\n  p {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 1.3rem;\n    font-weight: 900;\n    text-align: right;\n    color: #666;\n    margin-top: 2rem;\n  }\n`\n\nconst Phrase = ({phrase}) => {\n  return (\n    <>\n      {phrase.quote ?\n        <WrapperPhrase>\n          <h1> {phrase.quote}</h1>\n          <p> - {phrase.author}</p>\n        </WrapperPhrase >\n        : null\n      }\n    </>\n  )\n}\n\nexport default Phrase\n","import React, {useEffect, useState} from 'react'\nimport styled from '@emotion/styled'\nimport Phrase from './components/Phrase'\n\nconst Wrapper = styled.div`\n display: flex;\n align-items: center;\n padding: 0 5rem;\n flex-direction: column;\n`\n\nconst Button = styled.button`\n  background: -webkit-linear-gradient(top left, #007d35 0% ,#007d35 40%, #07574e 100%);\n  background-size: 300px;\n  font-family: Arial, Helvetica, sans-serif;\n  color: #fff;\n  margin-top: 3rem;\n  padding: 1rem 3rem;\n  font-size:2rem;\n  border: 2px solid black;\n  border-radius: 0.3rem;\n  transition: background-size .025s linear;\n\n  :hover {\n    cursor: pointer;\n    background-size: 400px;\n  }\n`\n\nfunction App () {\n  const [phrase, setPhrase] = useState({})\n\n  const fetchAPI = async () => {\n    const api = await fetch('https://breaking-bad-quotes.herokuapp.com/v1/quotes')\n    const quote = await api.json()\n    setPhrase(quote[0])\n  }\n\n  useEffect(() => {\n    fetchAPI()\n  }, [])\n\n  return (\n    <Wrapper>\n      <Phrase\n        phrase={phrase}\n      />\n      <Button\n        onClick={fetchAPI}\n      > Get a Quote</Button>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}